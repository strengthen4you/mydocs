name: 'Hugo PaperMod Deploy'
description: 'Hugo 博客一键部署，专注于写作，而不是工具配置。'
author: 'Protomyst'
branding:
  icon: 'book'
  color: 'blue'

inputs:
  github_token:
    description: 'GitHub token for API access'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install frontmatter tool
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install python-frontmatter

    - name: Set scripts permissions
      shell: bash
      run: |
        chmod +x scripts/*.py
        
    - name: Add Front Matter
      shell: bash
      run: ./scripts/add_frontmatter.py

    - name: Retrieve custom domain
      id: fetch-domain
      shell: bash
      run: |
        customDomain=$(curl -s -H "Authorization: Bearer ${{ inputs.github_token }}" \
        https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/pages \
        | jq -r '.cname // ""')
        echo "CUSTOM_DOMAIN=$customDomain" >> $GITHUB_ENV

    - name: Configure Hugo domain
      shell: bash
      run: |
        if [ -n "$CUSTOM_DOMAIN" ]; then
          domain="$CUSTOM_DOMAIN"
        else
          owner="${GITHUB_REPOSITORY_OWNER}"
          repo="$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)"
          domain="$owner.github.io/$repo"
        fi
        echo "Using domain: $domain"
        echo "DOMAIN=$domain" >> $GITHUB_ENV

    - name: Configure Hugo
      shell: bash
      run: ./scripts/configure_hugo.py

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: 'latest'
        extended: true

    - name: Create build directory and install theme
      shell: bash
      run: |
        mkdir -p build
        cd build
        git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod

    - name: Copy content
      shell: bash
      run: |
        mkdir -p build/content
        find . -type f -not -path "*/\.*" -not -name "README.md" -exec cp --parents {} build/content/ \;

    - name: Copy Hugo config
      shell: bash
      run: cp .github/hugo.toml build/hugo.toml

    - name: Create necessary pages
      shell: bash
      run: ./scripts/create_pages.py

    - name: Update relative paths
      shell: bash
      run: |
        find build/content -type f -name "*.md" -exec sed -i 's/\.\//\.\.\//g' {} +

    - name: Build Hugo site
      shell: bash
      run: cd build && hugo --minify
